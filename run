#!/bin/bash

set -e

function usage {
	echo "p/run [--print] [--wait] model"
	exit 2
}

PP=$(dirname $0)
test -f $PP/conf.ini || $PP/config
test -f $PP/conf.ini || exit -1
. $PP/lib.bash
source_conf

ENGINE="$ENGINE_MAKE"
ONLY_PRINT=false
RUN_WAIT=false
for arg
do
	shift
	case "$arg" in
		-h|--help) usage;;
		--slurm) ENGINE="slurm" ;;
		--pbs) ENGINE="pbs" ;;
		--local) ENGINE="local" ;;
		--print) ONLY_PRINT=true;;
		--wait) RUN_WAIT=true;;
		*) set -- "$@" "$arg";;
	esac
done

MODEL=$1
if test -z "$MODEL"
then
	usage
fi
SOLVER=$TCLB/CLB/$MODEL/main
if [ ! -f "$SOLVER" ]
then
	echo "Model '$MODEL' not found ('$SOLVER' doesn't exist)"
	usage
fi
shift

CASE=$1
if test -z "$CASE"
then
	usage
fi
if [ ! -f "$CASE" ]
then
	echo "Case file '$CASE' doesn't exist"
	usage
fi
shift

TASKS=$1
if [ -z "$TASKS" ]
then
	TASKS=1
else
	shift
fi

if [ $TASKS -gt $MAX_TASKS_PER_NODE ]
then
	TASKS_PER_NODE=$MAX_TASKS_PER_NODE
	NODES=$[$TASKS/$TASKS_PER_NODE]
	CORES_PER_TASK=$CORES_PER_TASK_FULL
else
	TASKS_PER_NODE=$TASKS
	NODES=1
	CORES_PER_TASK=1
fi

# REMAINDER=$[($NODES*$TASKS_PER_NODE)%$TASKS]
if [ $TASKS -ne $[$NODES*$TASKS_PER_NODE] ]
then
	echo Requested number of cores/gpus \($TASKS\) is not $NODES x $TASKS_PER_NODE
	exit -1
fi

CORES=$[$NODES*$TASKS_PER_NODE*$CORES_PER_TASK]

echo -e "Trying to run $CASE with $MODEL model on $TASKS (mpi)processes/gpus. Job details:
	CORES=NODESxTASKS_PER_NODExCORES_PER_TASK: $CORES = $NODES x $TASKS_PER_NODE x $CORES_PER_TASK"

NAME=CLB:$CASE

GPU_PER_TASK=0
if test "$RUN_GPU" == "y"
then
	GPU_PER_TASK=1
fi

if [ ! -z "$MEMORY_PER_CORE" ]
then
	MEM_PER_CORE_HEADER="#SBATCH --mem-per-cpu=${MEMORY_PER_CORE}gb"
	TOTAL_CPU_MEMORY=$[$MEMORY_PER_CORE*$CORES]
	echo -e	"	TOTAL_CPU_MEMORY=MEMORY_PER_CORExCORES: ${TOTAL_CPU_MEMORY}gb = ${MEMORY_PER_CORE}gb x $CORES"
else
    echo -e	"	MEMORY_PER_CORE is not declared, default value will be used."
fi

echo "Running '$CASE' with model '$MODEL' on '$TASKS' MPI ranks"
echo "   using reserving $CORES_PER_TASK cores and $GPU_PER_TASK GPUs per MPI rank"

source_engine $ENGINE
(
	set -e
	q_header
	q_name $NAME
	q_queue $MAIN_PARTITION
	q_grant $GRANT
	q_qos $MAIN_QOS
	q_units $NODES $TASKS_PER_NODE $CORES_PER_TASK $GPU_PER_TASK
	q_walltime 01:00:00

	echo
	echo "ulimit -l unlimited"
	echo "set -e # exit on error"
	echo
	module_list $MODULES_BASE $MODULES_ADD $MODULES_RUN
	echo
	echo "cd \$SLURM_SUBMIT_DIR"
	echo "$RUN_COMMAND $SINGULARITY_COMMAND $SOLVER $CASE"
) >tmp.job.scr

q_run tmp.job.scr
